{"version":3,"sources":["logo.svg","consulta.js","componentes/compo.js","componentes/compo1.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","fetch","require","Client","search","query","cb","concat","then","res","text","Header","react_default","a","createElement","this","props","React","Component","TodoForma","_this","Object","classCallCheck","dato","possibleConstructorReturn","getPrototypeOf","call","match","params","id","console","log","state","menuOptions","title","responsable","descripcion","prioridad","persona","nick","msg","created","type","default","handleInput","bind","assertThisInitialized","handleSubmit","e","_e$target","target","value","name","preventDefault","_this2","foods","guarda","JSON","parse","setState","options2","options3","className","compo_Header","href","keys","map","keyName","i","key","_id","onSubmit","onChange","placeholder","maxResults","err","results","dir","TodoForma1","cosas","prioridad1","valor1","prioridad2","App","Route","exact","path","component","todo1","compo1","valor","src","logo","alt","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.56e890d9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","const fetch = require('node-fetch');       \r\n\r\nfunction search(query, cb) {\r\n    return fetch(`http://localhost/api/food?q=${query}`)\r\n      .then(res => res.text())\r\n      .then(cb);\r\n  }\r\n  \r\n  const Client = { search };\r\n  export default Client;\r\n  \r\n","\r\nimport React,{Component} from 'react';\r\nimport Client from '../consulta';\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n      return <header>\r\n               <h1>{this.props.text}</h1>\r\n             </header>;\r\n    }\r\n  }\r\n\r\nclass TodoForma extends Component{\r\n    constructor(props){\r\n       super(props);\r\n    \r\n       const dato=this.props.match.params.id;\r\n       console.log(this.props.match);\r\n        this.state={\r\n            menuOptions: [\r\n                 {id:1,text:'prueba11'}, \r\n                 {id:2,text:'prueba21'}, \r\n                 {id:3,text:'prueba31'}\r\n                ],\r\n            title:dato,\r\n            responsable:'',\r\n            descripcion:'',\r\n            prioridad:'low',\r\n\r\n            persona:{ \r\n            nick: '1',\r\n            msg: '2',\r\n            created: { type: '3', default: '4' }\r\n            }\r\n        }\r\n        this.handleInput=this.handleInput.bind(this);\r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    };  \r\n\r\n\r\n    handleInput(e){\r\n        // console.log(e.target.value, e.target.name);\r\n        const {value,name}=e.target;\r\n        console.log(value + name);\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleSubmit(e){\r\n            //console.log(e.target.value);\r\n            e.preventDefault();\r\n            }\r\n\r\n    componentDidMount() {\r\n        Client.search('consulta', foods => {\r\n            let guarda = (JSON.parse(foods));\r\n            this.setState( {persona:guarda} );\r\n        });\r\n      }            \r\n\r\n    render(){\r\n        let options2= this.state.menuOptions;\r\n        let options3= this.state.persona;\r\n       \r\n        return(\r\n            <div className=\"col-mt-12\">\r\n            <div className=\"card mt-3\">\r\n            <div className=\"container\">   \r\n        \r\n            <Header text='ReUtilizacion1'/>\r\n            <Header text='ReUtilizacion2'/>\r\n\r\n<div className=\"container\">   \r\n    <div className=\"card-group mt-3\">\r\n\r\n      <div className=\"card text-center border-info\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">Titulo de la tarjeta 1</h4>\r\n          <p className=\"card-text\">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam lectus sem, \r\n                                tempor vitae mattis malesuada, ornare sed erat. Pellentesque nulla dui, congue\r\n                                nec tortor sit amet, maximus mattis dui. </p>\r\n          <a href=\"#\" className=\"btn btn-primary\">Entrar</a>\r\n        </div>\r\n      </div> \r\n      <div className=\"card text-center border-info\">\r\n        <div className=\"card-body\">\r\n           <h4 className=\"card-title\">Titulo de la tarjeta 1</h4>\r\n            {/* <ul>{ options2.map(  option=><li key={option.id}>{option.text}</li> ) }</ul>             */}\r\n            <ul>{\r\n                Object.keys(options2).map((keyName, i) => (\r\n                    <li key={i}>\r\n                        id={options2[keyName].id}, text:{options2[keyName].text}\r\n                    </li>\r\n                ))\r\n               }\r\n            </ul>\r\n        </div>\r\n      </div> \r\n      <div className=\"card text-center border-info\">\r\n        <div className=\"card-body\">\r\n           <h4 className=\"card-title\">Titulo de la tarjeta 1</h4>\r\n           {Object.keys(options3).map((keyName, i) => (\r\n                        <li key={i}>\r\n                            msg={options3[keyName].msg}, nick:{options3[keyName].nick}\r\n                        </li>\r\n                    ))}\r\n        </div>\r\n      </div> \r\n\r\n\r\n    </div>\r\n </div>             \r\n\r\n            <div className=\"col-md-2\">\r\n                <div className=\"card mt-2\">\r\n                    {Object.keys(options3).map((keyName, i) => (\r\n                        <div key={i}>\r\n                            <button className=\"btn btn-warning\">\r\n                            {options3[keyName]._id}:{options3[keyName].msg}\r\n                            </button>\r\n                        </div>  \r\n                    ))}\r\n                </div>\r\n            </div>\r\n\r\n\r\n           {/* ////***********hijo recibe del padre */}\r\n              <h1>Params:{this.state.title}</h1>\r\n\r\n              <form className=\"card-body\" onSubmit={this.handleSubmit}>\r\n\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"title\"\r\n                    onChange={this.handleInput}\r\n                    className=\"form-control\"\r\n                    placeholder='aqio'\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"responsable\"\r\n                    onChange={this.handleInput}\r\n                    className=\"form-control\"\r\n                    placeholder=\"escribe2 aqui\"\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    onChange={this.handleInput}\r\n                    className=\"form-control\"\r\n                    placeholder=\"escribe3 aqui\"\r\n                    />\r\n                    <button\r\n                    type=\"text\"\r\n                    name=\"entrada3\"\r\n                    className=\"form-control\">\r\n                        envia\r\n                    </button>\r\n\r\n              </form>            \r\n            </div>            \r\n            </div>            \r\n        </div>            \r\n        )\r\n    }\r\n\r\n}\r\nexport default TodoForma;","\r\nimport React,{Component} from 'react';\r\n\r\n\r\n// este emucho mejor!!!\r\n var search = require('youtube-search');\r\n var opts = {\r\n     maxResults: 10,\r\n     key: 'AIzaSyAHoZvRooqSclkRZAvtOwGMg4FhISRDrCc'\r\n   };\r\n   search('The Rolling stones', opts, function(err, results) {\r\n    if(err) return console.log(err);\r\n    console.dir(results);\r\n  });\r\n\r\n\r\nclass TodoForma1 extends Component{\r\n    constructor(props){\r\n       super(props);\r\n       const dato=this.props.cosas.match.params\r\n       console.log(props)\r\n       console.log(dato)\r\n        this.state={\r\n            prioridad1: props.valor1,\r\n            prioridad2: dato.id\r\n        }\r\n\r\n\r\n        //let messages = await Chat.find({}).limit(8).sort('-created');           \r\n    };  \r\n\r\n    render(){\r\n         return(\r\n            <div className=\"col-md-2\">\r\n              <h1>soy compo1 valor={this.state.prioridad1}</h1>\r\n              <h1>dato URL={this.state.prioridad2}</h1>\r\n            </div>            \r\n        )\r\n    }\r\n\r\n}\r\nexport default TodoForma1;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport TodoForma from './componentes/compo';\nimport TodoForma1 from './componentes/compo1';\nimport {Route} from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    const texto = 'une jsx-html';\n\n    return (\n      <div className=\"App\">\n         <h1>{texto}</h1>\n         {/************ envia del padres al hijo*/}\n         <Route exact path='/pagina1/:id' component={TodoForma} />\n         <Route exact path='/pagina2/:id' component={  (todo1)=><TodoForma1 valor1=\"2\" cosas={todo1}/> }/>\n         \n\n         {/************ recibe del abuelo      */}\n         <h1>{this.props.valor}</h1>\n         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from 'react-router-dom';\n\n\n// const mongoose = require('mongoose');\n// const Chat = require('../src/Models/Configura');\n//  mongoose.connect('mongodb://localhost/ejemplo')\n//  .then(db => console.log('db connected'))\n//  .catch(err => console.log(err));\n\n//***********abuelo envia al padre\n\nReactDOM.render(\n   <BrowserRouter>\n      <App valor='hola'/>\n  </BrowserRouter>\n, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}