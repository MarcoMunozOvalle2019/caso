{"ast":null,"code":"var fetch = require('node-fetch');\n\nfunction timeout(ms, promise) {\n  return new Promise(function (resolve, reject) {\n    setTimeout(function () {\n      reject(new Error(\"timeout\"));\n    }, ms);\n    promise.then(resolve, reject);\n  });\n}\n\nfunction search(query, cb) {\n  timeout(1000, fetch(\"http://localhost:81/api/marco?q=\".concat(query), {\n    method: 'GET'\n  })).then(function (res) {\n    return res.text();\n  }).then(cb).catch(function (error) {// might be a timeout error\n  });\n} // function search(query, cb) {\n//     return fetch(`http://localhost:81/api/marco?q=${query}`,{method: 'GET'})\n//       .then(res => res.text())\n//       .then(cb);\n//   }\n\n\nvar Client = {\n  search: search\n};\nexport default Client;","map":{"version":3,"sources":["C:\\BICE\\bases\\ReactApiMongo\\Cliente_React\\src\\consulta.js"],"names":["fetch","require","timeout","ms","promise","Promise","resolve","reject","setTimeout","Error","then","search","query","cb","method","res","text","catch","error","Client"],"mappings":"AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAGA,SAASC,OAAT,CAAiBC,EAAjB,EAAqBC,OAArB,EAA8B;AAC1B,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CC,IAAAA,UAAU,CAAC,YAAW;AACpBD,MAAAA,MAAM,CAAC,IAAIE,KAAJ,CAAU,SAAV,CAAD,CAAN;AACD,KAFS,EAEPN,EAFO,CAAV;AAGAC,IAAAA,OAAO,CAACM,IAAR,CAAaJ,OAAb,EAAsBC,MAAtB;AACD,GALM,CAAP;AAMD;;AAED,SAASI,MAAT,CAAgBC,KAAhB,EAAuBC,EAAvB,EAA2B;AACjBX,EAAAA,OAAO,CAAC,IAAD,EAAOF,KAAK,2CAAoCY,KAApC,GAA4C;AAACE,IAAAA,MAAM,EAAE;AAAT,GAA5C,CAAZ,CAAP,CACHJ,IADG,CACE,UAAAK,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADL,EAEHN,IAFG,CAEEG,EAFF,EAGHI,KAHG,CAGG,UAASC,KAAT,EAAgB,CACvB;AACC,GALG;AAMX,C,CAGD;AACA;AACA;AACA;AACA;;;AAEE,IAAMC,MAAM,GAAG;AAAER,EAAAA,MAAM,EAANA;AAAF,CAAf;AACA,eAAeQ,MAAf","sourcesContent":["const fetch = require('node-fetch');       \r\n\r\n\r\nfunction timeout(ms, promise) {\r\n    return new Promise(function(resolve, reject) {\r\n      setTimeout(function() {\r\n        reject(new Error(\"timeout\"))\r\n      }, ms)\r\n      promise.then(resolve, reject)\r\n    })\r\n  }\r\n\r\n  function search(query, cb) {\r\n            timeout(1000, fetch(`http://localhost:81/api/marco?q=${query}`,{method: 'GET'}) )\r\n        .then(res => res.text())\r\n        .then(cb)\r\n        .catch(function(error) {\r\n        // might be a timeout error\r\n        })\r\n}\r\n\r\n  \r\n// function search(query, cb) {\r\n//     return fetch(`http://localhost:81/api/marco?q=${query}`,{method: 'GET'})\r\n//       .then(res => res.text())\r\n//       .then(cb);\r\n//   }\r\n  \r\n  const Client = { search };\r\n  export default Client;\r\n  \r\n"]},"metadata":{},"sourceType":"module"}