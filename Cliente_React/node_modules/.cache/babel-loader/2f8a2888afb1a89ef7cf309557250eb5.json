{"ast":null,"code":"var querystring = require('querystring');\n\nvar axios = require('axios');\n\nvar allowedProperties = ['fields', 'channelId', 'channelType', 'eventType', 'forContentOwner', 'forDeveloper', 'forMine', 'location', 'locationRadius', 'onBehalfOfContentOwner', 'order', 'pageToken', 'publishedAfter', 'publishedBefore', 'regionCode', 'relatedToVideoId', 'relevanceLanguage', 'safeSearch', 'topicId', 'type', 'videoCaption', 'videoCategoryId', 'videoDefinition', 'videoDimension', 'videoDuration', 'videoEmbeddable', 'videoLicense', 'videoSyndicated', 'videoType', 'key'];\n\nmodule.exports = function search(term, opts, cb) {\n  if (typeof opts === 'function') {\n    cb = opts;\n    opts = {};\n  }\n\n  if (!opts) opts = {};\n\n  if (!cb) {\n    return new Promise(function (resolve, reject) {\n      search(term, opts, function (err, results, pageInfo) {\n        if (err) return reject(err);\n        resolve({\n          results: results,\n          pageInfo: pageInfo\n        });\n      });\n    });\n  }\n\n  var params = {\n    q: term,\n    part: opts.part || 'snippet',\n    maxResults: opts.maxResults || 30\n  };\n  Object.keys(opts).map(function (k) {\n    if (allowedProperties.indexOf(k) > -1) params[k] = opts[k];\n  });\n  axios.get('https://www.googleapis.com/youtube/v3/search?' + querystring.stringify(params)).then(function (response) {\n    var result = response.data;\n    var pageInfo = {\n      totalResults: result.pageInfo.totalResults,\n      resultsPerPage: result.pageInfo.resultsPerPage,\n      nextPageToken: result.nextPageToken,\n      prevPageToken: result.prevPageToken\n    };\n    var findings = result.items.map(function (item) {\n      var link = '';\n      var id = '';\n\n      switch (item.id.kind) {\n        case 'youtube#channel':\n          link = 'https://www.youtube.com/channel/' + item.id.channelId;\n          id = item.id.channelId;\n          break;\n\n        case 'youtube#playlist':\n          link = 'https://www.youtube.com/playlist?list=' + item.id.playlistId;\n          id = item.id.playlistId;\n          break;\n\n        default:\n          link = 'https://www.youtube.com/watch?v=' + item.id.videoId;\n          id = item.id.videoId;\n          break;\n      }\n\n      return {\n        id: id,\n        link: link,\n        kind: item.id.kind,\n        publishedAt: item.snippet.publishedAt,\n        channelId: item.snippet.channelId,\n        channelTitle: item.snippet.channelTitle,\n        title: item.snippet.title,\n        description: item.snippet.description,\n        thumbnails: item.snippet.thumbnails\n      };\n    });\n    return cb(null, findings, pageInfo);\n  }).catch(function (err) {\n    return cb(err);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}