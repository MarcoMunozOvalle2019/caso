{"ast":null,"code":"import _classCallCheck from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\caso\\\\Cliente_React\\\\src\\\\componentes\\\\biceGraficas.js\";\nimport React, { Component } from 'react';\nimport Client from '../consulta';\nimport { Line } from 'react-chartjs-2';\n\nvar _ = require('lodash');\n\nvar BiceGraficas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BiceGraficas, _Component);\n\n  function BiceGraficas(props) {\n    var _this;\n\n    _classCallCheck(this, BiceGraficas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BiceGraficas).call(this, props));\n    _this.state = {\n      name: '',\n      data: {},\n      grafica: {},\n      info: [],\n      valores: {},\n      combo: []\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BiceGraficas, [{\n    key: \"setGraphics\",\n    value: function setGraphics(arr1, arr2) {\n      var state = {\n        labels: arr1,\n        datasets: [{\n          label: 'BICE ESTADOS',\n          fill: false,\n          lineTension: 0.5,\n          backgroundColor: 'rgba(175,192,192,1)',\n          borderColor: 'rgba(255,2,255,1)',\n          borderWidth: 2,\n          data: arr2\n        }]\n      };\n      this.setState({\n        grafica: state\n      });\n    }\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      // Obtiene data de api\n      Client.search(function (respuesta) {\n        var thisOne = respuesta.apis[1].example.response; // prepara items combo\n\n        var arreglo = [];\n        arreglo.push({\n          name: 'ELEGIR AQUI PARA GRAFICAR'\n        });\n        arreglo.push({\n          name: 'nada1'\n        });\n        arreglo.push({\n          name: 'nada2'\n        });\n        arreglo.push({\n          name: thisOne.key\n        });\n\n        _this2.setState({\n          data: thisOne,\n          combo: arreglo,\n          info: respuesta.apis\n        });\n\n        _this2.setGraphics([], []);\n      });\n    }\n  }, {\n    key: \"getCombo\",\n    value: function getCombo(value) {\n      var counter = 1;\n      var arreglo1 = [];\n      var arreglo2 = [];\n\n      if (this.state.data.key === value) {\n        _.forEach(this.state.data.values, function (n, key) {\n          arreglo1.push(n);\n          arreglo2.push(counter);\n          counter++;\n        });\n\n        this.setState({\n          valores: this.state.data\n        });\n      }\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      e.preventDefault();\n      var value = e.target.value;\n      this.getCombo(value); //  // si seleccion combo corresponde carga arreglos con data\n      //  if (this.state.data.key===value){\n      //         _.forEach(this.state.data.values, (n, key)=> {\n      //             arreglo1.push(n)\n      //             arreglo2.push(counter)\n      //             counter++\n      //         });        \n      //         this.setState({\n      //             valores:this.state.data\n      //            });\n      //     }\n      // si seleccion combo otro opcion reset arreglos con data\n\n      if (value === 'nada1' || value === 'nada2') {\n        for (var i = 0; i < 301; i++) {\n          arreglo1.push(i);\n          arreglo1.push(2);\n        }\n\n        this.setState({\n          valores: {\n            \"key\": \"\",\n            \"name\": \"\",\n            \"unit\": \"\"\n          }\n        });\n      }\n\n      this.setGraphics(arreglo2, arreglo1);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // poblar combo\n      var optionItems = this.state.combo.map(function (combo) {\n        return React.createElement(\"option\", {\n          key: combo.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, combo.name);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.grafica,\n        options: {\n          title: {\n            display: true,\n            text: 'Grafica mensual',\n            fontSize: 40\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"priority\",\n        className: \"form-control\",\n        value: this.state.priority,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, optionItems), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, \" \"), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, this.state.valores.key)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.state.valores.name)), React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, this.state.valores.unit)))))), React.createElement(\"div\", {\n        className: \"card text-white bg-primary mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"/\",\n        method: \"get\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Volver\"))));\n    }\n  }]);\n\n  return BiceGraficas;\n}(Component);\n\nexport default BiceGraficas;","map":{"version":3,"sources":["C:\\caso\\Cliente_React\\src\\componentes\\biceGraficas.js"],"names":["React","Component","Client","Line","_","require","BiceGraficas","props","state","name","data","grafica","info","valores","combo","handleInputChange","bind","arr1","arr2","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","setState","search","respuesta","thisOne","apis","example","response","arreglo","push","key","setGraphics","value","counter","arreglo1","arreglo2","forEach","values","n","e","preventDefault","target","getCombo","i","getData","optionItems","map","title","display","text","fontSize","legend","position","priority","unit"],"mappings":";;;;;;;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AACA,IAAIC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAf;;IAEMC,Y;;;;;AACF,wBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,sFAAMA,KAAN;AACC,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,EADE;AAEPC,MAAAA,IAAI,EAAC,EAFE;AAGPC,MAAAA,OAAO,EAAC,EAHD;AAIPC,MAAAA,IAAI,EAAC,EAJE;AAKPC,MAAAA,OAAO,EAAC,EALD;AAMPC,MAAAA,KAAK,EAAC;AANC,KAAX;AAQA,UAAKC,iBAAL,GAAwB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAxB;AAVa;AAWhB;;;;gCAEUC,I,EAAKC,I,EAAK;AAClB,UAAIV,KAAK,GAAG;AACZW,QAAAA,MAAM,EAAEF,IADI;AAEZG,QAAAA,QAAQ,EAAE,CACN;AACAC,UAAAA,KAAK,EAAE,cADP;AAEAC,UAAAA,IAAI,EAAE,KAFN;AAGAC,UAAAA,WAAW,EAAE,GAHb;AAIAC,UAAAA,eAAe,EAAE,qBAJjB;AAKAC,UAAAA,WAAW,EAAE,mBALb;AAMAC,UAAAA,WAAW,EAAE,CANb;AAOAhB,UAAAA,IAAI,EAAEQ;AAPN,SADM;AAFE,OAAZ;AAcA,WAAKS,QAAL,CAAc;AAAChB,QAAAA,OAAO,EAAEH;AAAV,OAAd;AACD;;;8BAEO;AAAA;;AACN;AACAN,MAAAA,MAAM,CAAC0B,MAAP,CAAe,UAAAC,SAAS,EAAI;AAEvB,YAAMC,OAAO,GAAGD,SAAS,CAACE,IAAV,CAAe,CAAf,EAAkBC,OAAlB,CAA0BC,QAA1C,CAFuB,CAIvB;;AACA,YAAMC,OAAO,GAAC,EAAd;AACAA,QAAAA,OAAO,CAACC,IAAR,CAAa;AAAC1B,UAAAA,IAAI,EAAC;AAAN,SAAb;AACAyB,QAAAA,OAAO,CAACC,IAAR,CAAa;AAAC1B,UAAAA,IAAI,EAAC;AAAN,SAAb;AACAyB,QAAAA,OAAO,CAACC,IAAR,CAAa;AAAC1B,UAAAA,IAAI,EAAC;AAAN,SAAb;AACAyB,QAAAA,OAAO,CAACC,IAAR,CAAa;AAAC1B,UAAAA,IAAI,EAACqB,OAAO,CAACM;AAAd,SAAb;;AAEA,QAAA,MAAI,CAACT,QAAL,CAAc;AACXjB,UAAAA,IAAI,EAAEoB,OADK;AAEXhB,UAAAA,KAAK,EAACoB,OAFK;AAGXtB,UAAAA,IAAI,EAAEiB,SAAS,CAACE;AAHL,SAAd;;AAMC,QAAA,MAAI,CAACM,WAAL,CAAiB,EAAjB,EAAoB,EAApB;AACN,OAlBA;AAmBD;;;6BAEQC,K,EAAM;AACb,UAAIC,OAAO,GAAC,CAAZ;AACA,UAAIC,QAAQ,GAAC,EAAb;AACA,UAAIC,QAAQ,GAAC,EAAb;;AAEC,UAAI,KAAKjC,KAAL,CAAWE,IAAX,CAAgB0B,GAAhB,KAAsBE,KAA1B,EAAgC;AAC7BlC,QAAAA,CAAC,CAACsC,OAAF,CAAU,KAAKlC,KAAL,CAAWE,IAAX,CAAgBiC,MAA1B,EAAkC,UAACC,CAAD,EAAIR,GAAJ,EAAW;AACzCI,UAAAA,QAAQ,CAACL,IAAT,CAAcS,CAAd;AACAH,UAAAA,QAAQ,CAACN,IAAT,CAAcI,OAAd;AACAA,UAAAA,OAAO;AACV,SAJD;;AAKA,aAAKZ,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAC,KAAKL,KAAL,CAAWE;AADT,SAAd;AAGD;AACJ;;;sCAEemC,C,EAAG;AAChBA,MAAAA,CAAC,CAACC,cAAF;AADgB,UAETR,KAFS,GAEAO,CAAC,CAACE,MAFF,CAETT,KAFS;AAIhB,WAAKU,QAAL,CAAcV,KAAd,EAJgB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC;;AACA,UAAIA,KAAK,KAAG,OAAR,IAAiBA,KAAK,KAAG,OAA7B,EACG;AACI,aAAI,IAAIW,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkBA,CAAC,EAAnB,EAAsB;AAClBT,UAAAA,QAAQ,CAACL,IAAT,CAAcc,CAAd;AAAiBT,UAAAA,QAAQ,CAACL,IAAT,CAAc,CAAd;AACpB;;AACD,aAAKR,QAAL,CAAc;AACVd,UAAAA,OAAO,EAAC;AAAC,mBAAM,EAAP;AAAU,oBAAO,EAAjB;AAAoB,oBAAO;AAA3B;AADE,SAAd;AAGH;;AAEH,WAAKwB,WAAL,CAAkBI,QAAlB,EAA4BD,QAA5B;AACF;;;wCAGe;AAChB,WAAKU,OAAL;AACF;;;6BAIO;AAEJ;AACA,UAAIC,WAAW,GAAG,KAAK3C,KAAL,CAAWM,KAAX,CAAiBsC,GAAjB,CAAqB,UAACtC,KAAD;AAAA,eAC/B;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACL,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BK,KAAK,CAACL,IAAhC,CAD+B;AAAA,OAArB,CAAlB;AAIC,aAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,IAAD;AACI,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWG,OADrB;AAEI,QAAA,OAAO,EAAE;AACL0C,UAAAA,KAAK,EAAC;AACNC,YAAAA,OAAO,EAAC,IADF;AAENC,YAAAA,IAAI,EAAC,iBAFC;AAGNC,YAAAA,QAAQ,EAAC;AAHH,WADD;AAMLC,UAAAA,MAAM,EAAC;AACPH,YAAAA,OAAO,EAAC,IADD;AAEPI,YAAAA,QAAQ,EAAC;AAFF;AANF,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CADA,CADJ,CADH,EAuBG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,UAAb;AACY,QAAA,SAAS,EAAC,cADtB;AAEY,QAAA,KAAK,EAAE,KAAKlD,KAAL,CAAWmD,QAF9B;AAGY,QAAA,QAAQ,EAAE,KAAK5C,iBAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIaoC,WAJb,CADJ,EAQI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARJ,EAUI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAK3C,KAAL,CAAWK,OAAX,CAAmBuB,GAAxD,CADA,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAK5B,KAAL,CAAWK,OAAX,CAAmBJ,IAAxD,CADA,CAJJ,EAOI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqC,KAAKD,KAAL,CAAWK,OAAX,CAAmB+C,IAAxD,CADA,CAPJ,CAVJ,CADA,CADJ,CAvBH,EAkDG;AAAK,QAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,MAAM,EAAC,GAAb;AAAiB,QAAA,MAAM,EAAC,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAmC,QAAA,IAAI,EAAC,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ,CAlDH,CAFJ;AA4DJ;;;;EAjLsB3D,S;;AAqL3B,eAAeK,YAAf","sourcesContent":["\r\nimport React,{Component} from 'react';\r\nimport Client from '../consulta';\r\nimport {Line} from 'react-chartjs-2';\r\nvar _ = require('lodash');\r\n\r\nclass BiceGraficas extends Component{\r\n    constructor(props){\r\n        super(props);\r\n         this.state={\r\n             name:'',\r\n             data:{},\r\n             grafica:{},\r\n             info:[],\r\n             valores:{},\r\n             combo:[]\r\n         }\r\n         this.handleInputChange= this.handleInputChange.bind(this);\r\n     };  \r\n\r\n    setGraphics(arr1,arr2){\r\n        let state = {\r\n        labels: arr1,\r\n        datasets: [\r\n            {\r\n            label: 'BICE ESTADOS',\r\n            fill: false,\r\n            lineTension: 0.5,\r\n            backgroundColor: 'rgba(175,192,192,1)',\r\n            borderColor: 'rgba(255,2,255,1)',\r\n            borderWidth: 2,\r\n            data: arr2\r\n            }\r\n        ]\r\n        }\r\n        this.setState({grafica: state});         \r\n      }\r\n\r\n     getData(){\r\n        // Obtiene data de api\r\n        Client.search( respuesta => {\r\n\r\n             const thisOne = respuesta.apis[1].example.response\r\n\r\n             // prepara items combo\r\n             const arreglo=[]\r\n             arreglo.push({name:'ELEGIR AQUI PARA GRAFICAR'})\r\n             arreglo.push({name:'nada1'})\r\n             arreglo.push({name:'nada2'})\r\n             arreglo.push({name:thisOne.key})\r\n\r\n             this.setState({\r\n                data: thisOne,\r\n                combo:arreglo,\r\n                info: respuesta.apis\r\n              });\r\n\r\n              this.setGraphics([],[])\r\n       });      \r\n      }\r\n\r\n      getCombo(value){\r\n        let counter=1\r\n        let arreglo1=[]\r\n        let arreglo2=[]\r\n\r\n         if (this.state.data.key===value){\r\n            _.forEach(this.state.data.values, (n, key)=> {\r\n                arreglo1.push(n)\r\n                arreglo2.push(counter)\r\n                counter++\r\n            });        \r\n            this.setState({\r\n                valores:this.state.data\r\n                });\r\n          }\r\n      }\r\n\r\n    handleInputChange(e) {\r\n         e.preventDefault();\r\n         const {value} = e.target;\r\n\r\n         this.getCombo(value)\r\n        //  // si seleccion combo corresponde carga arreglos con data\r\n        //  if (this.state.data.key===value){\r\n        //         _.forEach(this.state.data.values, (n, key)=> {\r\n        //             arreglo1.push(n)\r\n        //             arreglo2.push(counter)\r\n        //             counter++\r\n        //         });        \r\n        //         this.setState({\r\n        //             valores:this.state.data\r\n        //            });\r\n        //     }\r\n\r\n         // si seleccion combo otro opcion reset arreglos con data\r\n         if (value==='nada1'||value==='nada2')\r\n            {\r\n                for(let i=0;i<301;i++){\r\n                    arreglo1.push(i);arreglo1.push(2);\r\n                }\r\n                this.setState({\r\n                    valores:{\"key\":\"\",\"name\":\"\",\"unit\":\"\"}\r\n                   });       \r\n            }\r\n\r\n          this.setGraphics( arreglo2, arreglo1)\r\n       }\r\n    \r\n\r\n    componentDidMount(){\r\n       this.getData();\r\n    }     \r\n\r\n\r\n       \r\n    render(){\r\n\r\n        // poblar combo\r\n        let optionItems = this.state.combo.map((combo) =>\r\n                <option key={combo.name}>{combo.name}</option>\r\n         );        \r\n\r\n         return(\r\n             \r\n             <div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                    <Line\r\n                        data={this.state.grafica}\r\n                        options={{\r\n                            title:{\r\n                            display:true,\r\n                            text:'Grafica mensual',\r\n                            fontSize:40\r\n                            },\r\n                            legend:{\r\n                            display:true,\r\n                            position:'right'\r\n                            }\r\n                        }}\r\n                        />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"col-sm-8\">\r\n                    <div className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <select name=\"priority\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.priority}\r\n                                    onChange={this.handleInputChange}>\r\n                                    {optionItems}\r\n                        </select>                \r\n\r\n                        <p className=\"card-text\"> </p>\r\n\r\n                        <div className=\"card\" >\r\n                            <div className=\"card\">\r\n                            <button className=\"btn btn-primary\">{this.state.valores.key}</button>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                            <button className=\"btn btn-primary\">{this.state.valores.name}</button>\r\n                            </div>\r\n                            <div className=\"card\">\r\n                            <button className=\"btn btn-primary\">{this.state.valores.unit}</button>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"card text-white bg-primary mb-12\" >\r\n                    <form action=\"/\" method=\"get\" >\r\n                        <button className=\"btn btn-primary\"type=\"submit\">Volver</button>\r\n                    </form>                \r\n                </div>\r\n\r\n             </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default BiceGraficas;"]},"metadata":{},"sourceType":"module"}