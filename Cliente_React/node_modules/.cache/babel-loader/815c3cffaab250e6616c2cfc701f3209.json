{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\BICE\\\\bases\\\\ReactApiMongo\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\BICE\\\\bases\\\\ReactApiMongo\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\nvar fetch = require('node-fetch');\n\nvar search =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(query, cb) {\n    var urlBase, params, url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            urlBase = 'http://localhost:81/api/marco', params = {\n              q: query\n            };\n            url = new URL(urlBase);\n            Object.keys(params).forEach(function (key) {\n              return url.searchParams.append(key, params[key]);\n            });\n            console.log(urlBase);\n            _context.next = 6;\n            return fetch(urlBase).then(function (res) {\n              return res.text();\n            }).then(cb);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function search(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}(); // const search = async (query, cb)=> {\n//   await fetch(`http://localhost:81/api/marco?q=${query}`,{method: 'GET'})\n//     .then(res => res.text())\n//     .then(cb);\n// }\n\n\nvar Client = {\n  search: search\n};\nexport default Client;","map":{"version":3,"sources":["C:\\BICE\\bases\\ReactApiMongo\\Cliente_React\\src\\consulta.js"],"names":["fetch","require","search","query","cb","urlBase","params","q","url","URL","Object","keys","forEach","key","searchParams","append","console","log","then","res","text","Client"],"mappings":";;;AAAA,IAAMA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AAEE,IAAMC,MAAM;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,KAAP,EAAcC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AACTC,YAAAA,OADS,GACC,+BADD,EAEbC,MAFa,GAEJ;AAAEC,cAAAA,CAAC,EAAEJ;AAAL,aAFI;AAGTK,YAAAA,GAHS,GAGH,IAAIC,GAAJ,CAASJ,OAAT,CAHG;AAKbK,YAAAA,MAAM,CAACC,IAAP,CAAaL,MAAb,EAAsBM,OAAtB,CAA+B,UAAAC,GAAG;AAAA,qBAAIL,GAAG,CAACM,YAAJ,CAAiBC,MAAjB,CAAyBF,GAAzB,EAA8BP,MAAM,CAAEO,GAAF,CAApC,CAAJ;AAAA,aAAlC;AACAG,YAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ;AANa;AAAA,mBAOPL,KAAK,CAACK,OAAD,CAAL,CACHa,IADG,CACE,UAAAC,GAAG;AAAA,qBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,aADL,EAEHF,IAFG,CAEEd,EAFF,CAPO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANF,MAAM;AAAA;AAAA;AAAA,GAAZ,C,CAYA;AACA;AACA;AACA;AACA;;;AAGA,IAAMmB,MAAM,GAAG;AAAEnB,EAAAA,MAAM,EAANA;AAAF,CAAf;AACA,eAAemB,MAAf","sourcesContent":["const fetch = require('node-fetch');       \r\n\r\n  const search = async (query, cb)=> {\r\n    var urlBase = 'http://localhost:81/api/marco', \r\n    params = { q: query};    \r\n    var url = new URL( urlBase );\r\n\r\n    Object.keys( params ).forEach( key => url.searchParams.append( key, params[ key ] ) );\r\n    console.log(urlBase)\r\n    await fetch(urlBase)\r\n      .then(res => res.text())\r\n      .then(cb);\r\n  }\r\n\r\n  // const search = async (query, cb)=> {\r\n  //   await fetch(`http://localhost:81/api/marco?q=${query}`,{method: 'GET'})\r\n  //     .then(res => res.text())\r\n  //     .then(cb);\r\n  // }\r\n\r\n  \r\n  const Client = { search };\r\n  export default Client;\r\n  \r\n"]},"metadata":{},"sourceType":"module"}