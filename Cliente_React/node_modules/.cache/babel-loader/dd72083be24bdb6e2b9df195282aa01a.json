{"ast":null,"code":"import _classCallCheck from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\caso\\\\Cliente_React\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\caso\\\\Cliente_React\\\\src\\\\componentes\\\\biceGraficas.js\";\nimport React, { Component } from 'react';\nimport Client from '../consulta';\nimport { Line } from 'react-chartjs-2';\nimport { stat } from 'fs';\n\nvar _ = require('lodash');\n\nvar BiceGraficas =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BiceGraficas, _Component);\n\n  function BiceGraficas(props) {\n    var _this;\n\n    _classCallCheck(this, BiceGraficas);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BiceGraficas).call(this, props));\n    _this.state = {\n      name: '',\n      data: {},\n      grafica: {},\n      info: []\n    };\n    _this.handleInputChange = _this.handleInputChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BiceGraficas, [{\n    key: \"getData\",\n    value: function getData() {\n      var _this2 = this;\n\n      Client.search(function (respuesta) {\n        _this2.setState({\n          info: respuesta.apis\n        });\n\n        var thisOne = respuesta.apis[1].example.response.values;\n\n        _this2.setState({\n          data: thisOne\n        });\n\n        var state = {\n          labels: [],\n          datasets: [{\n            label: 'BICE ESTADOS',\n            fill: false,\n            lineTension: 0.5,\n            backgroundColor: 'rgba(175,192,192,1)',\n            borderColor: 'rgba(255,2,255,1)',\n            borderWidth: 2,\n            data: []\n          }]\n        };\n\n        _this2.setState({\n          grafica: state\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getData();\n    }\n  }, {\n    key: \"handleInputChange\",\n    value: function handleInputChange(e) {\n      e.preventDefault();\n      var counter = 1;\n      var arreglo1 = [];\n      var arreglo2 = [];\n\n      _.forEach(this.state.data, function (n, key) {\n        arreglo1.push(n);\n        arreglo2.push(counter);\n        counter++;\n      });\n\n      console.log('arreglo1', arreglo1);\n      console.log('arreglo2', arreglo2);\n      this.state.grafica.datasets[0].data.push(4);\n      this.state.grafica.labels.push(1);\n      this.state.grafica.datasets[0].data.push(14);\n      this.state.grafica.labels.push(2); // state.datasets[0].data = arreglo1\n      // state.labels = arreglo1\n      //  const {value} = e.target;\n      //  const json=' {\"json\": { \"pide\":\"' +value+ '\", \"tipo\":\"1\" } } '\n      //  Client.search(json, respuesta => {\n      //      this.setState({\n      //          data: respuesta\n      //        });\n      //  });      \n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // let state = {\n      //     labels: [],\n      //     datasets: [\n      //       {\n      //         label: 'BICE ESTADOS',\n      //         fill: false,\n      //         lineTension: 0.5,\n      //         backgroundColor: 'rgba(175,192,192,1)',\n      //         borderColor: 'rgba(255,2,255,1)',\n      //         borderWidth: 2,\n      //         data: []\n      //       }\n      //     ]\n      //   }\n      console.log('asddddddddddddddddddddd'); // state.datasets[0].data.push(this.state.data)\n      // _.forEach(info[3], (n, key)=> {\n      //     arreglo1.push(n)\n      //     arreglo2.push(counter)\n      //     counter++\n      //   });        \n      //   console.log('esta=',this.state.data)\n      // state.datasets[0].data.push(4)\n      // let parsea\n      // let data = this.state.data;\n      // if(data) parsea = JSON.parse(data)\n      // const info = _.map( parsea, ((item)=>{\n      //     return item;\n      //  }))\n      // let counter=1\n      // let arreglo1=[]\n      // let arreglo2=[]\n      // _.forEach(info[3], (n, key)=> {\n      //     arreglo1.push(n)\n      //     arreglo2.push(counter)\n      //     counter++\n      //   });        \n      // state.datasets[0].data = arreglo1\n      // state.labels = arreglo1\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Line, {\n        data: this.state.grafica,\n        options: {\n          title: {\n            display: true,\n            text: 'Grafica mensual',\n            fontSize: 40\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"priority\",\n        className: \"form-control\",\n        value: this.state.priority,\n        onChange: this.handleInputChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"SELECCIONE AQUI PARA DESPLEGAR GRAFICA\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"cobre\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"dolar\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"euro\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"ipc\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"ivp\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"oro\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"plata\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }, \"uf\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"utm\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"yen\")), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \" \")))), React.createElement(\"div\", {\n        className: \"card text-white bg-primary mb-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        action: \"/\",\n        method: \"get\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn btn-primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Volver\"))));\n    }\n  }]);\n\n  return BiceGraficas;\n}(Component);\n\nexport default BiceGraficas;","map":{"version":3,"sources":["C:\\caso\\Cliente_React\\src\\componentes\\biceGraficas.js"],"names":["React","Component","Client","Line","stat","_","require","BiceGraficas","props","state","name","data","grafica","info","handleInputChange","bind","search","respuesta","setState","apis","thisOne","example","response","values","labels","datasets","label","fill","lineTension","backgroundColor","borderColor","borderWidth","getData","e","preventDefault","counter","arreglo1","arreglo2","forEach","n","key","push","console","log","title","display","text","fontSize","legend","position","priority"],"mappings":"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","sourcesContent":["\r\nimport React,{Component} from 'react';\r\nimport Client from '../consulta';\r\nimport {Line} from 'react-chartjs-2';\r\nimport { stat } from 'fs';\r\nvar _ = require('lodash');\r\n\r\n\r\nclass BiceGraficas extends Component{\r\n    constructor(props){\r\n        super(props);\r\n         this.state={\r\n             name:'',\r\n             data:{},\r\n             grafica:{},\r\n             info:[],\r\n         }\r\n         this.handleInputChange= this.handleInputChange.bind(this);\r\n     };  \r\n\r\n     getData(){\r\n        Client.search( respuesta => {\r\n            this.setState({\r\n                info: respuesta.apis\r\n              });\r\n             const thisOne = respuesta.apis[1].example.response.values\r\n             this.setState({\r\n                data: thisOne\r\n              });\r\n\r\n              let state = {\r\n                labels: [],\r\n                datasets: [\r\n                  {\r\n                    label: 'BICE ESTADOS',\r\n                    fill: false,\r\n                    lineTension: 0.5,\r\n                    backgroundColor: 'rgba(175,192,192,1)',\r\n                    borderColor: 'rgba(255,2,255,1)',\r\n                    borderWidth: 2,\r\n                    data: []\r\n                  }\r\n                ]\r\n              }\r\n              this.setState({\r\n                grafica: state\r\n              });\r\n\r\n       });      \r\n      }\r\n    \r\n    componentDidMount(){\r\n       this.getData();\r\n    }     \r\n\r\n\r\n     handleInputChange(e) {\r\n         e.preventDefault();\r\n\r\n         let counter=1\r\n         let arreglo1=[]\r\n         let arreglo2=[]\r\n \r\n         _.forEach(this.state.data, (n, key)=> {\r\n             arreglo1.push(n)\r\n             arreglo2.push(counter)\r\n             counter++\r\n           });        \r\n           console.log('arreglo1',arreglo1)\r\n           console.log('arreglo2',arreglo2)         \r\n\r\n\r\n\r\n           this.state.grafica.datasets[0].data.push(4)\r\n           this.state.grafica.labels.push(1)\r\n           this.state.grafica.datasets[0].data.push(14)\r\n           this.state.grafica.labels.push(2)\r\n\r\n\r\n        // state.datasets[0].data = arreglo1\r\n        // state.labels = arreglo1\r\n\r\n        //  const {value} = e.target;\r\n        //  const json=' {\"json\": { \"pide\":\"' +value+ '\", \"tipo\":\"1\" } } '\r\n        //  Client.search(json, respuesta => {\r\n        //      this.setState({\r\n        //          data: respuesta\r\n        //        });\r\n        //  });      \r\n       }\r\n \r\n    render(){\r\n\r\n        // let state = {\r\n        //     labels: [],\r\n        //     datasets: [\r\n        //       {\r\n        //         label: 'BICE ESTADOS',\r\n        //         fill: false,\r\n        //         lineTension: 0.5,\r\n        //         backgroundColor: 'rgba(175,192,192,1)',\r\n        //         borderColor: 'rgba(255,2,255,1)',\r\n        //         borderWidth: 2,\r\n        //         data: []\r\n        //       }\r\n        //     ]\r\n        //   }\r\nconsole.log('asddddddddddddddddddddd')\r\n        // state.datasets[0].data.push(this.state.data)\r\n        // _.forEach(info[3], (n, key)=> {\r\n        //     arreglo1.push(n)\r\n        //     arreglo2.push(counter)\r\n        //     counter++\r\n        //   });        \r\n\r\n     //   console.log('esta=',this.state.data)\r\n\r\n\r\n        // state.datasets[0].data.push(4)\r\n        // let parsea\r\n        // let data = this.state.data;\r\n        // if(data) parsea = JSON.parse(data)\r\n        // const info = _.map( parsea, ((item)=>{\r\n        //     return item;\r\n        //  }))\r\n\r\n        // let counter=1\r\n        // let arreglo1=[]\r\n        // let arreglo2=[]\r\n        // _.forEach(info[3], (n, key)=> {\r\n        //     arreglo1.push(n)\r\n        //     arreglo2.push(counter)\r\n        //     counter++\r\n        //   });        \r\n\r\n        // state.datasets[0].data = arreglo1\r\n        // state.labels = arreglo1\r\n\r\n         return(\r\n             <div>\r\n\r\n                        <div className=\"col-sm-6\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                            <Line\r\n                                data={this.state.grafica}\r\n                                options={{\r\n                                    title:{\r\n                                    display:true,\r\n                                    text:'Grafica mensual',\r\n                                    fontSize:40\r\n                                    },\r\n                                    legend:{\r\n                                    display:true,\r\n                                    position:'right'\r\n                                    }\r\n                                }}\r\n                                />\r\n                             </div>\r\n                          </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"col-sm-8\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <select\r\n                                    name=\"priority\"\r\n                                    className=\"form-control\"\r\n                                    value={this.state.priority}\r\n                                    onChange={this.handleInputChange}\r\n                                >\r\n                                    <option>SELECCIONE AQUI PARA DESPLEGAR GRAFICA</option>\r\n                                    <option>cobre</option>\r\n                                    <option>dolar</option>\r\n                                    <option>euro</option>\r\n                                    <option>ipc</option>\r\n                                    <option>ivp</option>\r\n                                    <option>oro</option>\r\n                                    <option>plata</option>\r\n                                    <option>uf</option>\r\n                                    <option>utm</option>\r\n                                    <option>yen</option>      \r\n\r\n                                </select>\r\n                                \r\n                                <p className=\"card-text\"> </p>\r\n\r\n                                {/* <div className=\"card\" >\r\n                                  <h5 className=\"card-title\">datos</h5>\r\n                                    <div className=\"card\">\r\n                                    <button className=\"btn btn-primary\">{info[0]}</button>\r\n                                    </div>\r\n                                    <div className=\"card\">\r\n                                    <button className=\"btn btn-primary\">{info[1]}</button>\r\n                                    </div>\r\n                                    <div className=\"card\">\r\n                                    <button className=\"btn btn-primary\">{info[2]}</button>\r\n                                    </div>\r\n                                </div> */}\r\n                             </div>\r\n                           </div>\r\n                        </div>\r\n\r\n                        <div className=\"card text-white bg-primary mb-12\" >\r\n                            <form action=\"/\" method=\"get\" >\r\n                                <button className=\"btn btn-primary\"type=\"submit\">Volver</button>\r\n                            </form>                \r\n                        </div>\r\n\r\n             </div>\r\n        )\r\n    }\r\n\r\n\r\n}\r\nexport default BiceGraficas;"]},"metadata":{},"sourceType":"module"}